@model FootbalManager_UIL.JoueurViewModel

@{
    ViewBag.Title = "EditJoueur";
}

<h2>EditJoueur</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>JoueurModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.JoueurVM.IdM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.IdM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.NomJoueurM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.NomJoueurM, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.NomJoueurM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.PrenomM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.PrenomM, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.PrenomM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.DateNaissanceM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.DateNaissanceM, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.DateNaissanceM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.DateDebutContratM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.DateDebutContratM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.DateDebutContratM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.DateFinContratM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.DateFinContratM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.DateFinContratM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.SalaireHebdomadaireM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.SalaireHebdomadaireM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.SalaireHebdomadaireM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.TailleM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.TailleM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.TailleM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.PoidM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.PoidM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.PoidM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.PositionM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.PositionM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.PositionM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.NomEquipeM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.NomEquipeM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.NomEquipeM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.NomPaysM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.NomPaysM, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.NomPaysM, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.JoueurVM.NomPrenomAgentM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoueurVM.NomPrenomAgentM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.NomPrenomAgentM, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.JoueurVM.FkContinentM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.FkContinentM, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.JoueurVM.FkPaysM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.FkPaysM, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.JoueurVM.FkEquipeM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.FkEquipeM, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.JoueurVM.FkPositionM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JoueurVM.FkPositionM, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

