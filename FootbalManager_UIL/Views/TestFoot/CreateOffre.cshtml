@model FootbalManager_UIL.MakeOffreViewModel

@{
    ViewBag.Title = "CreateOffre";
}

<h2>CreateOffre</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>OffreViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.OffreModelVM.FkContinentM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.FkContinentM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.OffreModelVM.FkPaysM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.FkPaysM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.OffreModelVM.FkEquipeM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.FkEquipeM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Nom d'équipe", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffreModelVM.NomEquipeM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.NomEquipeM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.OffreModelVM.FkPositionM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.FkPositionM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Position sur terrain", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffreModelVM.NomPositionM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.NomPositionM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.OffreModelVM.IdJoueurM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.IdJoueurM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Nom de joueur", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffreModelVM.NomJoueurM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.NomJoueurM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Prénom de joueur", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffreModelVM.PreNomJoueurM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.PreNomJoueurM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OffreModelVM.PrixOffreM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffreModelVM.PrixOffreM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.PrixOffreM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OffreModelVM.MessageM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OffreModelVM.MessageM, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.OffreModelVM.MessageM, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "DetailsJoueur", new {
    idContinent = Model.OffreModelVM.FkContinentM,
    idPays = Model.OffreModelVM.FkPaysM,
    idEquipe = Model.OffreModelVM.FkEquipeM,
    idJoueur = Model.OffreModelVM.IdJoueurM })
</div>
